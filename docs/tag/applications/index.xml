<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>applications | Derek Zoladz</title>
    <link>https://www.derekzoladz.com/tag/applications/</link>
      <atom:link href="https://www.derekzoladz.com/tag/applications/index.xml" rel="self" type="application/rss+xml" />
    <description>applications</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2022 Derek C. Zoladz</copyright><lastBuildDate>Fri, 31 Dec 2021 11:00:00 +0000</lastBuildDate>
    <image>
      <url>https://www.derekzoladz.com/media/icon_hu1efd8f6f495040e8e1031572b668117b_2834_512x512_fill_lanczos_center_3.png</url>
      <title>applications</title>
      <link>https://www.derekzoladz.com/tag/applications/</link>
    </image>
    
    <item>
      <title>2022 Apps, A Bit Differently</title>
      <link>https://www.derekzoladz.com/post/2022apps/</link>
      <pubDate>Fri, 31 Dec 2021 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/2022apps/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Duane Hanson &lt;em&gt;Janitor&lt;/em&gt;, sculpture at the &lt;a href=&#34;https://mam.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Milwaukee Museum of Art&lt;/a&gt; (DCZ, photo taken 2021)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As you turn the corner into the museum&amp;rsquo;s main gallery space, you&amp;rsquo;re greeted with the small, unassuming
figure of a middle-aged man. Fatigued, dirty, and weary from their labor, a familiar sense of
exhaustion that arrives towards the end of the work week. For an instant, it&amp;rsquo;s real. And then, without hesitation,
it becomes hallucinatory. All too quickly, you regain your wits and realize it&amp;rsquo;s a simulation. A gift.
A hyperreal sculpture from the artist, Duane Hanson.&lt;/p&gt;
&lt;p&gt;That instant, from hallucination to realization, perfectly describes the speed of the previous two years.
Time feels impossibly condensed, dehydrated, motionless&amp;hellip; and yet, somehow, more thoroughly exhausting.
As if the unfolding of the last two years occurred while trying to determine the  nature of the figure
in the foreground. Once you finally realize that it&amp;rsquo;s a sculpture, you&amp;rsquo;d still be in the same place, but different.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll be making few plans for 2022. It will be a year of recuperation, thinking, rediscovering inspiration,
and adjustment. That&amp;rsquo;s why I&amp;rsquo;m creating a set of aspirations for the new year, rather than highlighting
the tools that I&amp;rsquo;ll be &amp;rsquo;taking with me into the new year&#39;.&lt;/p&gt;
&lt;h2 id=&#34;perhaps-ill-find-some-time-to-explore&#34;&gt;Perhaps, I&amp;rsquo;ll find some time to explore&amp;hellip;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.astro.build/getting-started/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Astro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mongodb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://threejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Three.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Django, the local library website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://antonz.org/python-packaging/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Python Packaging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;video type=&#34;video/mp4&#34; src=&#34;https://video.twimg.com/tweet_video/E90y027VgAAhMLa.mp4&#34; controls=&#34;true&#34; autoplay=&#34;true&#34; loop=&#34;true&#34; crossorigin=&#34;anonymous&#34;&gt;&lt;/video&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nicole Fitzgerald, &lt;a href=&#34;https://twitter.com/ninklefitz/status/1431356230056828930&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Experimental Design Language&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;but-ill-be-prioritizing-restorative-practices-consuming-art-reading-philosophy-etc&#34;&gt;But, I&amp;rsquo;ll be prioritizing restorative practices (consuming art, reading philosophy, etc.)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://the-intersection.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Intersection, Superflux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://possibilitystudies.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Possibility Studies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://futurespodcast.net/episodes/37-thomasmoynihan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Thomas Moynihan, Futures Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://anticipationconference.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Anticipation Conference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://theconvivialsociety.substack.com/p/the-human-built-world-is-not-built?token=eyJ1c2VyX2lkIjo0MzEwMDA1MywicG9zdF9pZCI6NDM5MzA4MjgsIl8iOiJOVFEwSCIsImlhdCI6MTY0MDM2MTk0MiwiZXhwIjoxNjQwMzY1NTQyLCJpc3MiOiJwdWItNjk4MCIsInN1YiI6InBvc3QtcmVhY3Rpb24ifQ.xnYFQq8Ss_GuHONzJwzHs9cfnQtskgYM7OLPyPiB2iE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Human-Built World Is Not Built For Humans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Apps I&#39;m Taking into 2021</title>
      <link>https://www.derekzoladz.com/post/2021apps/</link>
      <pubDate>Fri, 01 Jan 2021 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/2021apps/</guid>
      <description>&lt;p&gt;While it&amp;rsquo;s a major challenge to identify all of the scripts, command line tools, and web-based applications that have influenced my thoughts and workflow over the previous year,
here&amp;rsquo;s a set of applications that I&amp;rsquo;m excited to take with me into the new year.&lt;/p&gt;
&lt;h3 id=&#34;waxhttpsgithubcomminicompwax&#34;&gt;&lt;a href=&#34;https://github.com/minicomp/wax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wax&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Using &lt;a href=&#34;https://go-dh.github.io/mincomp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;minimal computing principles&lt;/a&gt;, Wax is a project that aims to facilitate the creation of digital exhibits using static site technologies. For librarians exploring digital technologies at cash-strapped institutions without a formal digital initiatives program, Wax is a lightweight and cheap (in terms of cost and maintenance) solution.&lt;/p&gt;
&lt;p&gt;Initially, there&amp;rsquo;s a rather significant technical hurdle, but the skills can be easily repurposed for use in other data-intensive projects, web development using static sites, and other metadata or library-adjacent workflows. Here are a few of the underpinning of Wax:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Static Site Generator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://sass-lang.com/documentation/syntax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SCSS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;CSS Pre-processer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://bundler.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bundler&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Gem Dependency Management&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://shopify.github.io/liquid/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Liquid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Templating Language&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://yaml.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YAML&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Data Serialization Standard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://getbootstrap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Front-End Frameworks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.ruby-lang.org/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ruby&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Programming Language&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.markdownguide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Plain-Text Markup Language&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.json.org/json-en.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JSON&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Data Interchange Format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Git&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Software Version Control&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github Pages&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Static Site Hosting Service&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It&amp;rsquo;s also a great way to learn about the International Image Interoperability Framework™ [a.k.a &lt;a href=&#34;https://iiif.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iiif&lt;/a&gt; or &amp;ldquo;Triple-I-F&amp;rdquo;] and its associated manifest files and viewer applications like &lt;a href=&#34;https://projectmirador.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mirador&lt;/a&gt; and &lt;a href=&#34;https://openseadragon.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenSeadragon&lt;/a&gt;. Until I started using Wax, I hadn&amp;rsquo;t considered full-text search in Javascript, which Wax provide via &lt;a href=&#34;http://elasticlunr.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elasticlunr.js&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
  &lt;img style=&#34;border: 1px solid #bfbfbf;&#34; src=&#34;wax_workflow.jpg&#34;&gt;
  &lt;figcaption style=&#34;color:grey;&#34;&gt;Wax Workflow ⟶ see &lt;a href=&#34;https://minicomp.github.io/wiki/wax/#so-what-does-wax-look-like&#34;&gt;[documentation]&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;To get acquainted with the Wax workflow, a photographed several of my few favorite book covers from my personal collection and created an exhibit space called the &lt;a href=&#34;https://dzoladz.github.io/curiousitarium/collection/&#34;&gt;Curiousitarium&lt;sup&gt;DCZ&lt;/sup&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;figure&gt;
  &lt;img style=&#34;border: 1px solid #bfbfbf;&#34; src=&#34;curiousitarium.png&#34;&gt;
  &lt;figcaption style=&#34;color:grey;&#34;&gt;Example: Book Cover Exhibit Using Wax&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;graphvizhttpsgraphvizorg&#34;&gt;&lt;a href=&#34;https://graphviz.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphviz&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Graphviz is an open source graph visualization software. Graph visualization is a way of representing structural information as diagrams of abstract graphs and networks. It has important applications in networking, bioinformatics, software engineering, database and web design, machine learning, and in visual interfaces for other technical domains.&lt;/p&gt;
&lt;p&gt;Writing diagrams using a familiar syntax - and working in an IDE, text editor, or any another code-like environment - just feels comfortably at home. Here&amp;rsquo;s the &lt;code&gt;.dot&lt;/code&gt; file that generates the graph below &lt;a href=&#34;contextualizing-ezproxy.txt&#34;&gt;contextualizing-ezproxy.dot&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&#34;contextualizing-ezproxy.png&#34;&gt;
  &lt;figcaption style=&#34;color:grey;&#34;&gt;Resultant Graphs are Crisply-defined and Visually Appealing&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;It also makes it easy to drop in a Python utility script that takes the &lt;code&gt;.dot&lt;/code&gt; input and generates a visual representation as a &lt;code&gt;.png&lt;/code&gt; file&amp;hellip; which can be quickly and easily integrated into presentation software or any number of other productivity applications.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from graphviz import Source
import os

input_file = &#39;contextualizing-ezproxy&#39; + &#39;.dot&#39;
output_file = &#39;contextualizing-ezproxy&#39; + &#39;.png&#39;

os.system(&#39;dot -Tpng &#39; + input_file + &#39; -o &#39; + output_file)

source = Source.from_file(input_file)
source.view()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Here are a few tools to explore:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Graphviz application use case - &lt;a href=&#34;https://ohionet.github.io/ohiolink-webinar/#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Contextualizing EZproxy, OhioLINK Webinar Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;No installation required online tool - &lt;a href=&#34;http://magjac.com/graphviz-visual-editor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web-based Dot File Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Quick start &lt;code&gt;.dot&lt;/code&gt; cheat sheet - &lt;a href=&#34;https://graphs.grevian.org/reference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Graphviz Reference Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pa11y-dashboardhttpsgithubcompa11ypa11y-dashboard&#34;&gt;&lt;a href=&#34;https://github.com/pa11y/pa11y-dashboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pa11y Dashboard&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Pa11y Dashboard is a web-based user interface for the underlying Pa11y accessibility reporting service. The dashboard simplifies the process of actively and continuously monitoring the accessibility status of a library&amp;rsquo;s service platforms.&lt;/p&gt;
&lt;p&gt;Pa11y is an open source tool for running automated accessibility tests. Pa11y supports several common accessibility standards, including the W3C&amp;rsquo;s Web Content Accessibility Guidelines 2.0 (WCAG2A, WCAG2AA, or WCAG2AAA) and the United States GSA Section 508 standards. The &lt;a href=&#34;https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aXe-core rule set&lt;/a&gt; is Pa11y&amp;rsquo;s default test runner suite.&lt;/p&gt;
&lt;figure&gt;
  &lt;img style=&#34;border: 1px solid #bfbfbf;&#34; src=&#34;pa11y-dashboard.png&#34;&gt;
  &lt;figcaption style=&#34;color:grey;&#34;&gt;Example Dashboard&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you&amp;rsquo;re familiar with Docker, you can clone the following GitHub repository and have a working version of &lt;a href=&#34;https://github.com/dzoladz/pa11y-docker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pa11y Dashboard in 5 minutes!&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;traefik-proxyhttpstraefikiotraefik&#34;&gt;&lt;a href=&#34;https://traefik.io/traefik/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Traefik Proxy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One of my goals for 2020 was to create a small scale application hosting platform, where I could continue my exploration into the use of containerized applications within libraries and cultural heritage institutions. In early June, a working prototype was up-and-running on a general purpose t3.large EC2 instance. Code named, Esmeralda.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Esmeralda&lt;/strong&gt; is a platform for running containerized applications behind the enterprise-class reverse proxy Traefik. Containers are orchestrated via docker-compose files and &lt;a href=&#34;https://www.portainer.io/products/community-edition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Portainer&lt;/a&gt; is used to provide a graphical interface into the entire environment.&lt;/p&gt;
&lt;figure&gt;
  &lt;img src=&#34;traefik-diagram.webp&#34;&gt;
  &lt;figcaption style=&#34;color:grey;&#34;&gt;Diagram of Basic Traefik Workflows&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Traefik proxy handles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP request resolution to each container service&lt;/li&gt;
&lt;li&gt;SSL termination&lt;/li&gt;
&lt;li&gt;SSL certificate issuance, renewal, and installation via &lt;a href=&#34;https://letsencrypt.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Traefik also provides a suite of middleware to upgrade connections to HTTPS, provide basic authentication services, among many other functions. Traefik instructions can be written directly into an application&amp;rsquo;s docker-compose file, which means Traefik can configure itself automatically and dynamically as new containerized applications are deployed to Esmeralda.&lt;/p&gt;
&lt;h3 id=&#34;ngrokhttpsngrokcom&#34;&gt;&lt;a href=&#34;https://ngrok.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ngrok&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;ngrok is a cross-platform application that enables a locally-hosted web server to be exposed to the internet. Installing ngrok on the host machine is quick and simple. Once you specify the listening port of the web server, the ngrok client will: (1) initiate a secure connection to the ngrok server, (2) create a TCP tunnel on an &lt;code&gt;.ngrok.io&lt;/code&gt; subdomain, and (3) route all HTTP traffic hitting the unique ngrok address to the specified port of your local host&amp;hellip; essentially bypassing firewall restrictions and NAT mappings to expose your local machine to the internet. Pretty cool! 😎&lt;/p&gt;
&lt;figure&gt;
  &lt;img style=&#34;border: 1px solid #bfbfbf;&#34; src=&#34;koha-personal.png&#34;&gt;
  &lt;figcaption style=&#34;color:grey;&#34;&gt;Cataloging My Personal Library in Koha&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you&amp;rsquo;ve made it this far, feel free to run a search or two for items in my personal &lt;a href=&#34;https://dzoladz-koha.ngrok.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Library Catalog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m using &lt;a href=&#34;https://koha-community.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Koha&lt;/a&gt; as my ILS and ngrok to expose it to the internet. I&amp;rsquo;ve only cataloged about 100+ items related to libraries, archives, and book history. Select you keywords accordingly. Sorry, no lending privileges yet&amp;hellip; that&amp;rsquo;s for another year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>code{4}lib - Pittsburgh, PA</title>
      <link>https://www.derekzoladz.com/post/2020code4lib/</link>
      <pubDate>Sat, 14 Mar 2020 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/2020code4lib/</guid>
      <description>&lt;h3 id=&#34;lots-of-firsts-at-code4lib-2020&#34;&gt;Lots of Firsts at Code{4}lib 2020&lt;/h3&gt;
&lt;p&gt;Code{4}lib is the only major conference that I&amp;rsquo;ve attend with a single track. Most conferences are multi-track. At a multi-track conference, attendees gather for a keynote presentation to kick-off the event. But after that collective experience, everyone develops a self-selected path through simultaneously occurring presentations and activities. At Code{4}lib, all attendees experience the same sequence of sessions, lightning talks, breakouts, and keynotes presentations. There&amp;rsquo;s a definitively stronger sense of community that emerges with a single-track conference. As attendees discuss sessions - through the filters of their own local context and professional focus - a richer understanding of each topic develops.&lt;/p&gt;
&lt;p&gt;This conference also marks the first time that I&amp;rsquo;ve worked on a committee for a national conference. All of my previous conference planning experiences have been either at the state, regional, or institutional-level. As a member of the Website Working Group for the &lt;a href=&#34;https://2020.code4lib.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2020 conference&lt;/a&gt;, our team focused mainly on content strategy for web properties and improving the overall experience for on-site and remote attendees, speakers, sponsors, and a host of other interested parties that will stumble upon the content in the coming weeks and months. Our team contributed a number of significant improvements to the overall accessibility of the conference website, including: (1) multiple adjustments to the document structure, (2) removing situations of skipped heading to ease screenreader traversal, and whenever possible (3) swapping static content with variable references, so that next year&amp;rsquo;s working group will be able to customize the conference website more fully by simply updating the content in the site&amp;rsquo;s &lt;code&gt;data.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Another first? How about navigating the terrain when your conference coincides with the emergence of the global pandemic: &lt;strong&gt;COVID-19&lt;/strong&gt;. Impossible to anticipate, but major crises highlight the spectrum of financial and logistical realities faced by any organization that hosts a national conference. Hats off to the Local Planning Committee, as they did a spectacular job of keeping on top of CDC recommendations and guiding with definitive leadership. And the Streaming Video Committee, they kept the &lt;a href=&#34;https://www.youtube.com/playlist?list=PLzGHg-1qAr4BxO2TzF9wiFcXVTEn1rRYM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;remote presentations&lt;/a&gt; connected and engaged with flawless momentum. Bravo.&lt;/p&gt;
&lt;h3 id=&#34;food-cause-the-answer-is-always-yes&#34;&gt;Food, &amp;lsquo;Cause the Answer is Always &amp;ldquo;Yes&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;I ❤️ food. One of the things that I savor about visiting another city - for a conference or otherwise - are those brief moments that I actually get to experience it&amp;rsquo;s uniqueness. When I visited Portland, Oregon several years ago, the food culture was truly exceptional. Portland set a rather high bar for my future gastronomic explorations. But, a treasure can be uncovered anywhere. One pleasant surprise along my conference trek has been Minneapolis, Minnesota. Quite literally, the best breakfast tostada I&amp;rsquo;ve ever eaten was at &lt;a href=&#34;https://mercurympls.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mercury&lt;/a&gt;, which is less than a city block from the light rail station at Nicollet Mall.&lt;/p&gt;
&lt;p&gt;Unfortunately, Pittsburgh was slightly underwhelming. I did manage to discover a tasty sandwich shop, &lt;a href=&#34;https://www.eat-gaucho.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gaucho&amp;rsquo;s Parrilla Argentina &lt;/a&gt; in the Strip District, and the downtown location of &lt;a href=&#34;http://www.nickysthaikitchen.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nicky&amp;rsquo;s Thai Kitchen&lt;/a&gt; had a refreshing ginger-infused hot sake that was entirely welcome after a full day.&lt;/p&gt;
&lt;h3 id=&#34;hotel-oddities&#34;&gt;Hotel Oddities&lt;/h3&gt;
&lt;p&gt;A rather large &lt;em&gt;sinkhole&lt;/em&gt; exposed the bowels of the city, and swallowed a city bus in October 2019, remained unrepaired in front of the Westin hotel.
&lt;img src=&#34;https://9b16f79ca967fd0708d1-2713572fef44aa49ec323e813b06d2d9.ssl.cf2.rackcdn.com/1200x/20191028dsSinkholePATBusLocal03-2-1572277030.jpg&#34; alt=&#34;Pittsburgh port authority bus projecting upward from a sinkhole in the middle of a downtown street&#34; title=&#34;Pittsburgh port authority bus projecting upward from a sinkhole in the middle of a downtown street&#34;&gt;&lt;/p&gt;
&lt;p&gt;And the &lt;em&gt;elevator&lt;/em&gt; controls were&amp;hellip; um, peculiar. Rather than attempting to describe it myself, I&amp;rsquo;ll just point to the following 5 minute lightening talk that does a much better job than I can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/0URpVt0-iVQ?t=9815&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Expectations and Conventions: A code{4}lib Elevator Story&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yes, it really is a fun &lt;em&gt;and&lt;/em&gt; informative talk that&amp;rsquo;s worth your next coffee break.&lt;/p&gt;
&lt;h3 id=&#34;lots-of-projects-that-ill-follow-up-on&#34;&gt;Lots of Projects that I&amp;rsquo;ll Follow-up on:&lt;/h3&gt;
&lt;p&gt;Before heading to the conference, I was already in the process of spinning up the digital asset management system &lt;a href=&#34;https://hyku.samvera.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hyku&lt;/a&gt; on a t3-large EC2 instance. Having just finished writing a &lt;code&gt;docker-compose-ohn.yml&lt;/code&gt; file to set up an instance of Hyku behind the reverse proxy &lt;a href=&#34;https://containo.us/traefik/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Traefik&lt;/a&gt; and using &lt;a href=&#34;https://www.portainer.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Portainer&lt;/a&gt; as a container management tool, I was just beginning to explore Hyku&amp;rsquo;s possibilities.&lt;/p&gt;
&lt;p&gt;As such, I stopped by the &lt;a href=&#34;https://samvera.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Samvera&lt;/a&gt; community table during one the breaks for a brief chat about the &lt;a href=&#34;https://www.hykuforconsortia.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hyku for Consortia&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.derekzoladz.com/website/post/2020code4lib/hyku_for_consortia.png&#34; alt=&#34;Hexagon-shaped sticker showing Hyku for Consortia logo&#34; title=&#34;Hexagon-shaped sticker showing Hyku for Consortia logo&#34;&gt;&lt;/p&gt;
&lt;p&gt;![Hexagon-shaped sticker showing Hyku for Consortia logo]({{ &amp;ldquo;hyku_for_consortia.png&amp;rdquo; | relURL }} &amp;ldquo;Hexagon-shaped sticker showing Hyku for Consortia logo&amp;rdquo;)&lt;/p&gt;
&lt;p&gt;The main focus of the Hyku for Consortia work is to implement a series of changes to the permissions of Hyku. While Hyku is architected as a multi-tenant application right out of the box, there is no current method to provide a group of users with the ability to work across tenants. The Hyku for Consortia project aims to create this feature to facilitate cross-consortial collaborations, as well as allowing the development of administrative governance bodies, say &amp;ldquo;a standards and review body&amp;rdquo;, which could provide guidance and assistance throughout all of the tenants hosted on a single Hyku instance. The project has partnered with &lt;a href=&#34;https://www.notch8.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Notch8&lt;/a&gt; out of San Diego to complete the feature development.&lt;/p&gt;
&lt;h3 id=&#34;-just-a-few-others&#34;&gt;&amp;hellip; Just a Few Others&lt;/h3&gt;
&lt;p&gt;So many tools, so little time.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/httptoolkit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP Toolkit&lt;/a&gt;&lt;br&gt;
Is this a mashup of &lt;a href=&#34;https://www.wireshark.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wireshark&lt;/a&gt; and &lt;a href=&#34;https://www.telerik.com/fiddler&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fiddler&lt;/a&gt;, but more intuitive? We&amp;rsquo;ll find out soon enough :)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mnylc/preservethispodcast&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Preserve this Podcast&lt;/a&gt;&lt;br&gt;
Likely of more interest to public libraries, setting up a DIY podcast preservation workshop might appeal to communities with an interest in audio or citizen journalism. Recently, I&amp;rsquo;ve been much more focused on the applicability of &lt;a href=&#34;https://carpentries.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Carpentries&lt;/a&gt; workshops for academic technical services departments&amp;hellip; especially for mid-sized academic libraries located within reasonable geographic proximity to any major metropolitan area. These skills need to be acquired now.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wagtail/wagtail&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wagtail&lt;/a&gt;&lt;br&gt;
It&amp;rsquo;s an open source content management system built on &lt;a href=&#34;https://www.djangoproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Django&lt;/a&gt;. It can be used to create simple apps that can be embedded into link resolvers, or other library platforms, to allow patrons to report missing PDFs, broken links, or other problematic content within a vendor&amp;rsquo;s platform. Input capture mechanisms can be coded using client-side Javascript.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.browserstack.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BrowserStack&lt;/a&gt;&lt;br&gt;
Execute automated browser tests as part of a CI/CD pipeline. There&amp;rsquo;s a free-tier planning for testing open source projects.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mherrmann/helium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helium&lt;/a&gt;&lt;br&gt;
An alternative to &lt;a href=&#34;https://www.selenium.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Selenium&lt;/a&gt; for driving a browser. Useful for application testing and automating routine chores. I&amp;rsquo;m looking forward to giving this tool a test drive. The simplified API appears magical.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apps I&#39;m Taking into 2020</title>
      <link>https://www.derekzoladz.com/post/2019apps/</link>
      <pubDate>Mon, 30 Dec 2019 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/2019apps/</guid>
      <description>&lt;p&gt;While it&amp;rsquo;s a major challenge to identify all of the scripts, command line tools, and web-based applications that have influenced my thoughts and workflow over the previous year,
here&amp;rsquo;s a set of applications that I&amp;rsquo;m excited to take with me into the new year.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/laurent22/joplin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Joplin&lt;/a&gt;&lt;br&gt;
Built upon node.js and electron, Joplin is an open source note taking application. At the moment, I&amp;rsquo;m using it as a well-structured notebook to recall quotes and collect ideas of all sorts. With the ability to sync notebooks to both &lt;a href=&#34;https://owncloud.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OwnCloud&lt;/a&gt; and &lt;a href=&#34;https://nextcloud.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NextCloud&lt;/a&gt; - as well as several other storage solutions - the availability of my notebooks across multiple OSes and environments makes it an application that I&amp;rsquo;ll enjoy on many occasions in 2020+.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dockstation.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dockstation&lt;/a&gt;&lt;br&gt;
If you want: (1) a gentle, graphical, introduction to engineering microservice-based applications with Docker Compose, (2) an interface to the container registry of Docker Hub, and (3) the ability to expose your container logs with the click of a button, DockStation is a wonderful gateway into the world of containers. I develop all of my &lt;code&gt;docker-compose.yml&lt;/code&gt; files using Dockstation on macOS.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pi-hole.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pi-Hole&lt;/a&gt;&lt;br&gt;
Running on a raspberry pi 3 on my home LAN, Pi-Hole provides DNS-level ad blocking on the network. I&amp;rsquo;m using Pi-hole as my DHCP server to assign IP addresses to clients on the LAN.  Via &lt;a href=&#34;https://wiki.debian.org/dnsmasq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dnsmasq&lt;/a&gt;, Pi-hole is also responsible for resolving a few host names on the LAN for applications like my Koha instance and backup server.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt;&lt;br&gt;
While working with the Code4Lib web team on the 2020 (Pittsburgh, PA) conference website, I&amp;rsquo;ve become acquainted with this ruby-based static site generator. I&amp;rsquo;ve been using &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; for my personal website, as well as for the &lt;a href=&#34;http://info.cool-cat.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Consortium of Ohio Libraries&lt;/a&gt; website, for roughly 2 years. Hugo has been reliable, but Jekyll as several themes for software project documentation and product marketing that have simple, yet complete, designs. I&amp;rsquo;ll likely explore these themes for other projects in 2020.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitwarden.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bitwarden&lt;/a&gt;&lt;br&gt;
As I&amp;rsquo;m currently using LastPass, I&amp;rsquo;ve only begun to evaluate the full potential of BitWarden. I prefer open source applications, but this password management solution falls into the aspirational category for the coming year.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitLab&lt;/a&gt;&lt;br&gt;
According to the project website, &amp;ldquo;GitLab is a complete DevOps platform&amp;rdquo;. My main reason for creating a GitLab account is to explore the broader range of open source projects, whose primary source code repository might live within the GitLab ecosystem. As an example, the Evergreen ILS community writes documentation using &lt;a href=&#34;http://asciidoc.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Asciidoc&lt;/a&gt;. Experiments have begun using &lt;a href=&#34;https://antora.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Antora&lt;/a&gt; for generating Evergreen documentation. Antora&amp;rsquo;s source code resides on GitLab.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Curses, It&#39;s Glances</title>
      <link>https://www.derekzoladz.com/post/glances/</link>
      <pubDate>Sat, 30 Nov 2019 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/glances/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s definitely an argument to be made for using lightweight apps that minimize installed dependencies in an effort to: (1) minimize the surface area for vulnerabilities and attack vectors, and (2) reduce application complexity for  troubleshooting purposes when something inevitably goes wrong. However, there needs to be a balance between security gains and pleasure in using an application, what&amp;rsquo;s the point in installing it in the first place if you aren&amp;rsquo;t going to use it?&lt;/p&gt;
&lt;p&gt;An application that sits in the sweet spot is &lt;a href=&#34;https://nicolargo.github.io/glances/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Glances&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Glances uses a plugin archiecture. The documentation contains a &lt;a href=&#34;https://glances.readthedocs.io/en/stable/aoa/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;current list of available plugins&lt;/a&gt;. One of the plugins that deserves highlighting is the AMP (Application Monitoring Process) plugin. AMPs are simple regex statements written into the Glances main &lt;code&gt;glances.conf&lt;/code&gt; configuration file that allow the user to monitor any running processes. Glances configuration file is written in the human readable INI format.&lt;/p&gt;
&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;
&lt;p&gt;On macOS Catalina, I&amp;rsquo;m using Homebrew as my package manager.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install glances
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s it. Simple. But if you&amp;rsquo;re like me, you&amp;rsquo;ll want to adjust the default configuration. The glances directory does not exist by default, so you’ll also need to create it by doing:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /usr/local/etc/glances
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat /usr/local/Cellar/glances/3.1.3/share/doc/glances/glances.conf &amp;gt; /usr/local/etc/glances/glances.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;keybindings-interactive-commands&#34;&gt;Keybindings (Interactive Commands)&lt;/h2&gt;
&lt;p&gt;A sampling of the in-app toggles that I&amp;rsquo;ve found useful.&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;D&lt;/kbd&gt; &lt;strong&gt;show/hide Docker module&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;A&lt;/kbd&gt; &lt;strong&gt;show/hide AMPs module&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;←&lt;/kbd&gt;&lt;kbd&gt;→&lt;/kbd&gt; &lt;strong&gt;move through Tasks menus&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;h&lt;/kbd&gt; &lt;strong&gt;show Help&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;n&lt;/kbd&gt; &lt;strong&gt;show/hide Networks module&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;1&lt;/kbd&gt; &lt;strong&gt;toggle global CPU and per-CPU stats&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;2&lt;/kbd&gt; &lt;strong&gt;show/hide left sidebar&lt;/strong&gt;&lt;br&gt;
&lt;kbd&gt;5&lt;/kbd&gt; &lt;strong&gt;show/hide top menu&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;follow-up&#34;&gt;Follow up&lt;/h2&gt;
&lt;p&gt;Of course, &lt;a href=&#34;https://glances.readthedocs.io/en/stable/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Glances provides several export options for statistical data. One option is Elasticsearch. Indexing the usage data from macOS to be visualized in Kibana running on localhost is a likely next step.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Overview of My Personal Library</title>
      <link>https://www.derekzoladz.com/post/my_library/</link>
      <pubDate>Thu, 03 Oct 2019 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/my_library/</guid>
      <description>&lt;p&gt;On a day-to-day basis, I work with the &lt;a href=&#34;http://info.cool-cat.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Consortium of Ohio Libraries&lt;/a&gt; on their open-source ILS &lt;a href=&#34;https://evergreen-ils.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Evergreen&lt;/a&gt;. Whether it&amp;rsquo;s configuring new circulation policies, adjusting global system settings, or writing SQL to batch update item attributes, I&amp;rsquo;ve explored a significant chunk of Evergreen over the last 3 years. But it&amp;rsquo;s an understatment to say that Evergreen is a massive application. There&amp;rsquo;s still plenty of uncharted functionality.&lt;/p&gt;
&lt;p&gt;Evergreen&amp;rsquo;s architecture is designed for multi-tenancy out-of-the-box and built to scale to very large consortia. In the United States, it&amp;rsquo;s the platform for a number of large public library consortia. For a personal library, it&amp;rsquo;s overkill. Developing a personal library is also an opportunity to explore the setup and administer another ILS.&lt;/p&gt;
&lt;p&gt;For these reasons, I chose another well-known open source ILS used most often by stand-alone public libraries as the foundation for my personal library: &lt;a href=&#34;https://koha-community.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Koha&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Goals for the personal library projected included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Low stakes copy and original MARC cataloging experience&lt;/li&gt;
&lt;li&gt;Developing data migration skills (e.g. Koha to &lt;a href=&#34;https://www.folio.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FOLIO&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Diversifying my ILS administration&lt;/li&gt;
&lt;li&gt;Design and build ILS infrastructure and networking from scratch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;ll be cataloging my personal collection of library-related books on my local network using the following hardware.
&lt;video controls src=&#34;https://www.derekzoladz.com/post/my_library/koha_server.mp4&#34;&gt;&lt;/video&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why ls is exa</title>
      <link>https://www.derekzoladz.com/post/exa/</link>
      <pubDate>Fri, 09 Aug 2019 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/exa/</guid>
      <description>&lt;p&gt;One of the most common commands that I execute in the terminal is simply to list the contents of a directory. Since I do this so often, being able to quickly and easily digest vast amounts of information about the content of the directory is essential. That&amp;rsquo;s where &lt;a href=&#34;https://the.exa.website/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;exa&lt;/a&gt; shines.&lt;/p&gt;
&lt;p&gt;Out-of-the-box, the default color scheme of &lt;code&gt;exa&lt;/code&gt; is finely tuned. I found the intricate use of subtle color distinctions distracting, rather than informative. As such, I would need to modify the color definitions to suit my personal goals of: (1) being able to easily differentiate between directory content that my current user owns or is a member of the assigned group, (2) rapidly distinguish between files and directories, and (3) generally list common metadata elements that experiencing has shown to be frequently useful in troubleshooting an issue.&lt;/p&gt;
&lt;p&gt;For the moment, here&amp;rsquo;s what I&amp;rsquo;m using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ------------------------------
# exa - Color Scheme Definitions
# ------------------------------

export EXA_COLORS=&amp;quot;\
da=38;5;245:\
di=38;5;14:\
sn=38;5;28:\
sb=38;5;28:\
uu=38;5;40:\
un=38;5;160:\
gu=38;5;40:\
gn=38:5:160:\
bl=38;5;220:\
ur=37:\
uw=37:\
ux=37:\
ue=37:\
gr=37:\
gw=37:\
gx=37:\
tr=37:\
tw=37:\
tx=37:\
su=37:\
sf=37:\
xa=37&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;exa&lt;/code&gt; has a wide range of configurable settings and features. After barely scratching the surface of exa&amp;rsquo;s functionality, I&amp;rsquo;ve configured a tool that lists directory contents in a clear, and highly meaningful way, that fits my workflow. &lt;a href=&#34;https://the.exa.website/features&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;exa&amp;rsquo;s documentation&lt;/a&gt; provides adequate description to customize output to fix various use cases. For example, I&amp;rsquo;m not using any of the git integration, extended attributes, or unix-like tree expansion of the file system.&lt;/p&gt;
&lt;p&gt;So, what am I using? Well&amp;hellip; it&amp;rsquo;s spelled out in the &lt;code&gt;ls&lt;/code&gt; alias in my &lt;code&gt;.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;alias ls=&amp;quot;exa --long --header --links  --inode --blocks --accessed --modified --created --group --all --sort=.name  --group-directories-first&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Farewell, Nano</title>
      <link>https://www.derekzoladz.com/post/farewell_nano/</link>
      <pubDate>Thu, 06 Jun 2019 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/farewell_nano/</guid>
      <description>&lt;p&gt;Forever, I&amp;rsquo;ve used &lt;code&gt;nano&lt;/code&gt; as my command-line text editor. I&amp;rsquo;ve never had an issue with it. In fact, it&amp;rsquo;s been so reliable that I&amp;rsquo;ve keep it around much longer than I should have. It still works well for most of my needs, but it&amp;rsquo;s time to expand my suite of skills and learn something new.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s why I&amp;rsquo;m switching to &lt;code&gt;vim&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Out-of-the-box, &lt;code&gt;vim&lt;/code&gt; is a &lt;em&gt;tabula rasa&lt;/em&gt;, a blank slate, and it feels oddly empty. To fill this vacuum, my first step in making the transition was to explore plugin managers. Of course, this is following an introductory period to learn the basics. If I was going to successfully make the switch, I was going to need to first personalize my instance &lt;code&gt;vim&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I selected Tim Pope&amp;rsquo;s &lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pathogen.vim&lt;/a&gt; as my plugin manager. &lt;code&gt;pathogen.vim&lt;/code&gt; allows for each plugin to be placed into its own version-controlled directory and loaded at runtime. Installing a plugin is straightforward: &lt;code&gt;git clone&lt;/code&gt; into &lt;code&gt;~/.vim/bundle/&lt;/code&gt;. Simple, maintainable, elegant.&lt;/p&gt;
&lt;p&gt;Here are a few of the plugins that comprise my base:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nanotech/jellybeans.vim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jellybeans.vim&lt;/a&gt;: Because everyone needs a cheerful, dark-mode enabled, color scheme.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/scrooloose/nerdtree&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nerdtree.vim&lt;/a&gt;: If you&amp;rsquo;re going to be using &lt;code&gt;vim&lt;/code&gt; for any amount of time, you&amp;rsquo;ll want to have a file explorer.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-fugitive&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fugitive.vim&lt;/a&gt;: A way more advanced git wrapper than I currently need, but a rich avenue for exploration and growth. I&amp;rsquo;m basically using this plugin to display git information in the &lt;code&gt;&#39;statusline&#39;&lt;/code&gt; via&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/itchyny/lightline.vim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lightline.vim&lt;/a&gt;: In a nutshell, an easy to use and highly configurable &lt;code&gt;&#39;statusline&#39;&lt;/code&gt; plugin.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to take &lt;a href=&#34;https://github.com/dzoladz/.vim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my initial configuration&lt;/a&gt; for a spin!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apps I&#39;m Taking into 2019</title>
      <link>https://www.derekzoladz.com/post/2018apps/</link>
      <pubDate>Mon, 31 Dec 2018 11:00:00 +0000</pubDate>
      <guid>https://www.derekzoladz.com/post/2018apps/</guid>
      <description>&lt;p&gt;I should probably start off with a bit of a caveat.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/TTRyEOT.jpg&#34; alt=&#34;image of Steve Jobs calling all categories of computer program an app.&#34;&gt;&lt;/p&gt;
&lt;p&gt;Okay. Now that we have that out of the way, here are a few of the apps that I&amp;rsquo;ve discovered over the last 365 days that I&amp;rsquo;ll be taking with me into 2019.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/pycharm/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PyCharm&lt;/a&gt;&lt;br&gt;
PyCharm is a Python IDE with an extensive collection of plugins. I&amp;rsquo;m using the community edition to develop Python scripts in support the Consortium of Ohio Libraries, mainly to interact with the Evergreen ILS. PyCharm includes a useful testing suite and refactoring tools, while also providing straightforward integration with GitHub and seamless implementation of pipenv virtual environments. Simple on-boarding for new python developers, but feature rich and extensible as your needs grow.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.iterm2.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iTerm2&lt;/a&gt;&lt;br&gt;
Essentially, a terminal replacement for the native terminal application that shipped with my MacBook Pro. I find the ability to split terminal panes both vertically and horizontally an advantage for different tasks. I&amp;rsquo;ve also made use of the integrated search feature quite a bit. With colorized output, it&amp;rsquo;s beautiful to use. There are also a slew of other powerful features that I rarely make use of (in 2018, at least).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.sequelpro.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sequel Pro&lt;/a&gt;&lt;br&gt;
A MacOS native application for interacting with MySQL and MariaDB and a replacement phpMyAdmin. Enough said.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sqlitebrowser/sqlitebrowser&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB browser for SQLite&lt;/a&gt;&lt;br&gt;
Open source application to create and edit SQLite database files. My main use case is to import Excel worksheets and be able to execute SQL commands on the data. Maybe more importantly is the ability to import multiple Excel worksheets, join them together, and query across them. This tool said me quite a bit of time when working with the Academic Library Association of Ohio (ALAO) this past year.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://brave.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Brave&lt;/a&gt;&lt;br&gt;
A web browser built on Chromium and the Blink rendering engine, a fork of WebKit. It&amp;rsquo;s my drop-in replacement for Google Chrome at the moment.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oh My Zsh&lt;/a&gt;&lt;br&gt;
I&amp;rsquo;ve abandoned Bash and began using the Z shell on my MacBook Pro. I&amp;rsquo;m a very big fan of the available themes, which have assisted with git workflow and generally made working in the terminal a much more pleasant and enjoyable experience. Highly recommended.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/berick/pysip2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PySip2&lt;/a&gt;&lt;br&gt;
A Python-based SIP 2 client that has been invaluable this year. I&amp;rsquo;ve used this tool for testing SIP connectivity during the statewide implementation of Lynda.com, while establishing authentication for the Ohio Digital Library, for new subscriptions to Hoopla, and also while implementing a PC management system at one on the COOL libraries. Outstanding little application.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
